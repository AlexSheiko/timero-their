# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#
# Updating Faslane must come first, because after update it looses the session
update_fastlane

default_platform(:android)

platform :android do
  desc "Deploy for internal testing via Firebase App Distribution"
	  lane :internal_testing do
	    safety_checks
	
	    changelog = prompt(text: "Changelog: ")
	
	    increment_version

	    build_apk

	    distribute_via_firebase_to(
        group: "timero-team",
        changelog: changelog
      )
			commit_version_change
	  end

	desc "Deploy for external testing via Google Play"
	  lane :external_testing do
			safety_checks

	    increment_version

			build_app_bundle
	    
			distribute_via_google_play_manually

			commit_version_change
	  end

	lane :safety_checks do
    ensure_git_status_clean

    # Running Flutter tests
    # sh "cd ../../ && flutter test"
  end

	lane :increment_version do
    build_number = current_build_number + 1
    set_build_number value: build_number
    set_version_number value: build_number
  end

	lane :current_build_number do
    # Keep Android and iOS build numbers in sync
    [android_version_from_gradle, latest_testflight_build_number - 1].max
	end

  lane :android_version_from_gradle do
    path = '../app/build.gradle'
    re = /versionCode\s+(\d+)/ 
    s = File.read(path)
    s[re, 1].to_i
  end

  lane :set_build_number do |options|
    new_build_number = options[:value]
    increment_version_code(
      gradle_file_path: "app/build.gradle",
      version_code: new_build_number
    )
  end

  # Setting version number too, because analytics is based on it
  lane :set_version_number do |options|
    new_build_number = options[:value]
    version_number = "1.0.#{new_build_number}"
    increment_version_name(
      gradle_file_path: "app/build.gradle",
      version_name: version_number
    )
  end

	lane :build_apk do
		sh "flutter build apk --release --obfuscate --split-debug-info=build/app/outputs/symbols"
  end

  lane :build_app_bundle do
		sh "flutter build appbundle --release --obfuscate --split-debug-info=build/app/outputs/symbols"
  end

	lane :distribute_via_firebase_to do |options|
    group = options[:group]
		changelog = options[:changelog]
		firebase_app_distribution(
			# Firebase App ID (not to be confused with Project ID). 
	    # You can find it in the Firebase console inside the Android app settings section.
	    app: "1:127701682526:android:90b56ba08bade01397a7cf",
			apk_path: "../build/app/outputs/flutter-apk/app-release.apk",
			groups: group, # Testers groups, comma-separated
			release_notes: changelog,
	  )
	end

	lane :distribute_via_google_play_manually do
    open_folder_with_releases
  end

	lane :open_folder_with_releases do
		sh "open ../../build/app/outputs/"
	end

	lane :commit_version_change do
    versionCode = current_build_number
    git_commit(path: "*.gradle", message: "Android Version Bump to #{versionCode}")
    add_git_tag(build_number: versionCode)
    push_to_git_remote
  end
end